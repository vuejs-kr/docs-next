import{o as s,c as a,e as n,t as l,d as e,a as o}from"./app.4f365495.js";const p=o('<h1 id="template-syntax" tabindex="-1">템플릿 문법 <a class="header-anchor" href="#template-syntax" aria-hidden="true">#</a></h1><p>Vue는 컴포넌트 인스턴스의 데이터를 서술적으로 렌더링된 DOM에 바인딩할 수 있는 HTML 기반 템플릿 문법을 사용합니다. 모든 Vue 템플릿은 사양을 준수하는 브라우저 및 HTML 파서에서 문법을 분석할 수 있는 문법적으로 유효한 HTML입니다.</p><p>내부적으로 Vue는 템플릿을 고도로 최적화된 JavaScript 코드로 컴파일합니다. 반응형 시스템과 결합된 Vue는 앱 상태의 변경 사항을 적용할 때, 다시 렌더링할 필요가 있는 최소한의 컴포넌트를 지능적으로 파악하고 DOM 조작을 최소화 합니다.</p><p>가상 DOM 개념에 익숙하고 JavaScript의 원시적인 작동법을 선호하는 경우, JSX 지원 옵션을 사용하여 템플릿 대신 <a href="/guide/extras/render-function.html">렌더링 함수를 직접 작성</a>할 수도 있습니다. 그러나 템플릿과 동일한 수준의 컴파일 시간 최적화를 기대할 수 없다는 점에 유의하십시오.</p><h2 id="text-interpolation" tabindex="-1">텍스트 보간법 <a class="header-anchor" href="#text-interpolation" aria-hidden="true">#</a></h2><p>데이터 바인딩의 가장 기본적인 형태는 &quot;Mustache&quot;(이중 중괄호) 문법을 사용한 텍스트 보간법입니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">메세지: </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>이중 중괄호 태그 내 <code>msg</code>는 해당 컴포넌트 인스턴스의 <code>msg</code> 속성의 값으로 대체됩니다. 또한 <code>msg</code> 속성이 변경될 때마다 업데이트됩니다.</p><h2 id="raw-html" tabindex="-1">HTML 출력 <a class="header-anchor" href="#raw-html" aria-hidden="true">#</a></h2><p>이중 중괄호는 데이터를 HTML이 아닌 일반 텍스트로 해석합니다. 실제 HTML을 출력하려면 <a href="/api/built-in-directives.html#v-html"><code>v-html</code> 디렉티브</a>을 사용해야 합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">텍스트 보간법 사용: </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> rawHtml </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">v-html 디렉티브 사용: </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-html</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">rawHtml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div>',11),t=o('<p>여기서 우리가 보고있는 <code>v-html</code>이라는 새로운 속성은 <strong>디렉티브</strong>라고 합니다. 디렉티브는 Vue에서 제공하는 특수한 속성임을 나타내기 위해 접두사 <code>v-</code>를 사용하며, 짐작했듯이 디렉티브는 렌더링된 DOM에 특별한 반응적 동작을 적용합니다. 여기서 우리가 설명하고자 하는 것은 &quot;현재 활성화 상태인 인스턴스의 <code>rawHtml</code> 속성을 사용하여 이 엘리먼트 내부의 HTML을 최신 상태로 유지합니다.&quot;입니다.</p><p><code>span</code> 내부의 컨텐츠는 <code>rawHtml</code> 속성 값을 일반 HTML로 해석한 것으로 대체됩니다. 데이터 바인딩은 무시됩니다. Vue는 문자열 기반 템플릿 엔진이 아니기 때문에 <code>v-html</code>을 사용하여 템플릿의 일부분을 작성할 수 없습니다. 따라서 UI 재사용 및 구성을 위한 기본 단위로 컴포넌트가 선호됩니다.</p><div class="warning custom-block"><p class="custom-block-title">보안 경고</p><p>웹사이트에서 임의의 HTML을 동적으로 렌더링하면 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noreferrer">XSS 취약점</a>이 쉽게 발생할 수 있으므로 매우 위험할 수 있습니다. 신뢰할 수 있는 컨텐츠에만 <code>v-html</code>을 사용하고 사용자가 제공한 컨텐츠에는 <strong>절대</strong> 사용하지 마세요.</p></div><h2 id="attribute-bindings" tabindex="-1">속성 바인딩 <a class="header-anchor" href="#attribute-bindings" aria-hidden="true">#</a></h2><p>이중 중괄호는 HTML 속성(attribute) 내에서 사용할 수 없습니다. 대신 <a href="/api/built-in-directives.html#v-bind"><code>v-bind</code> 디렉티브</a>를 사용하세요:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">dynamicId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>v-bind</code> 디렉티브는 엘리먼트의 <code>id</code> 속성을 컴포넌트의 <code>dynamicId</code> 속성과 동기화된 상태로 유지하도록 Vue에 지시합니다. 바인딩된 값이 <code>null</code> 또는 <code>undefined</code>이면 엘리먼트의 속성이 제거된 상태로 렌더링 됩니다.</p><h3 id="shorthand" tabindex="-1">단축 문법 <a class="header-anchor" href="#shorthand" aria-hidden="true">#</a></h3><p><code>v-bind</code>는 매우 일반적으로 사용되기 때문에 전용 단축 문법이 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">dynamicId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>:</code>로 시작하는 속성은 일반 HTML과 약간 다르게 보일 수 있지만, 실제로는 유효한 속성명 문자열이며, Vue를 지원하는 모든 브라우저에서 올바르게 파싱 할 수 있습니다. 또한 최종 렌더링된 마크업에는 표시되지 않습니다. 단축 문법은 선택 사항이지만 사용할 경우 유용할 것입니다.</p><blockquote><p>이후 가이드 내용에서는 Vue 개발자에게 가장 일반적으로 사용되는 단축 문법을 코드 예제에서 사용할 것입니다.</p></blockquote><h3 id="boolean-attributes" tabindex="-1">불리언(Boolean) 속성 <a class="header-anchor" href="#boolean-attributes" aria-hidden="true">#</a></h3><p><a href="https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes" target="_blank" rel="noreferrer">불리언 속성</a>은 엘리먼트에 표기했는지 여부로 참/거짓 값을 나타내는 속성입니다. 예를 들어, <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled" target="_blank" rel="noreferrer"><code>disabled</code></a>는 가장 일반적으로 사용되는 불리언 속성 중 하나입니다.</p><p><code>v-bind</code>는 이러한 경우 약간 다르게 작동합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">isButtonDisabled</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">버튼</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>isButtonDisabled</code>에 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy" target="_blank" rel="noreferrer">truthy 값</a>이 있는 경우, <code>disabled</code> 속성이 표기됩니다. 값이 빈 문자열인 경우 <code>&lt;button disabled=&quot;&quot;&gt;</code>의 일관성을 유지하므로 속성이 표기됩니다. 그 외 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" target="_blank" rel="noreferrer">falsy 값</a>의 경우 속성이 생략됩니다.</p><h3 id="dynamically-binding-multiple-attributes" tabindex="-1">여러 속성을 동적으로 바인딩 <a class="header-anchor" href="#dynamically-binding-multiple-attributes" aria-hidden="true">#</a></h3><p>아래와 같이 여러 속성을 나타내는 JavaScript 객체가 있는 경우:</p><div class="composition-api"><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> objectOfAttrs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">class</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wrapper</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></div><div class="options-api"><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    objectOfAttrs</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      class</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">wrapper</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></div><p>인자 없이 <code>v-bind</code>를 사용하여 단일 엘리먼트에에 바인딩할 수 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">objectOfAttrs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h2 id="using-javascript-expressions" tabindex="-1">JavaScript 표현식 사용 <a class="header-anchor" href="#using-javascript-expressions" aria-hidden="true">#</a></h2><p>지금까지는 템플릿의 간단한 속성 키에만 바인딩했습니다. 그러나 Vue는 실제로 모든 데이터 바인딩 내에서 JavaScript 표현식의 모든 기능을 지원합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> number </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> ok </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">예</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">아니오</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reverse</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;`</span><span style="color:#C3E88D;">list-</span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">}`&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>이러한 표현식은 현재 컴포넌트 인스턴스의 데이터 범위에서 JavaScript로 평가됩니다.</p><p>Vue 템플릿에서 JavaScript 표현식은 다음과 같은 위치에 사용할 수 있습니다:</p><ul><li>이중 중괄호(텍스트 보간법) 내부</li><li>모든 Vue 디렉티브 속성(<code>v-</code>로 시작하는 특수 속성) 내부</li></ul><h3 id="expressions-only" tabindex="-1">하나의 표현식만 가능 <a class="header-anchor" href="#expressions-only" aria-hidden="true">#</a></h3><p>각 바인딩에는 <strong>하나의 단일 표현식</strong>만 포함될 수 있습니다. 표현식은 값으로 평가할 수 있어야 하는 코드 조각입니다. 쉽게 말해 <code>return</code> 뒤에 사용할 수 있는 코드여야 하는 것입니다.</p><p>따라서 다음 코드들은 <strong>작동하지 않습니다</strong>:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 이것은 표현식이 아니라 선언식입니다: --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 흐름 제어도 작동하지 않습니다. 삼항 표현식을 사용하십시오. --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (ok) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">message</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"></span></code></pre></div><h3 id="calling-functions" tabindex="-1">함수 호출 <a class="header-anchor" href="#calling-functions" aria-hidden="true">#</a></h3><p>바인딩 표현식 내부에서 컴포넌트에서 노출하는 메서드를 호출할 수 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">title</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">toTitleDate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">formatDate</span><span style="color:#A6ACCD;">(date) </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>바인딩 표현식 내부에서 호출되는 함수는 컴포넌트가 업데이트될 때마다 호출되므로, 데이터를 변경 또는 비동기 작업을 트리거하는 등의 <strong>부작용이 없어야 합니다</strong>.</p></div><h3 id="restricted-globals-access" tabindex="-1">제한된 전역 접근 <a class="header-anchor" href="#restricted-globals-access" aria-hidden="true">#</a></h3><p>템플릿 표현식은 샌드박스 처리되어 <a href="https://github.com/vuejs/core/blob/main/packages/shared/src/globalsWhitelist.ts#L3" target="_blank" rel="noreferrer">제한된 전역 리스트</a>에만 접근할 수 있습니다. 이 목록은 <code>Math</code> 및 <code>Date</code> 등 일반적으로 사용되는 기본 제공 전역 객체를 표시합니다.</p><p>리스트에 명시적으로 포함되지 않은 <code>window</code>와 같은 전역 속성은 템플릿 표현식에서 접근할 수 없습니다. 그러나 <a href="/api/application.html#app-config-globalproperties"><code>app.config.globalProperties</code></a>에 추가하여, Vue 내부의 모든 표현식에서 전역 속성에 접근 할 수 있도록 명시적으로 정의할 수 있습니다.</p><h2 id="directives" tabindex="-1">디렉티브 <a class="header-anchor" href="#directives" aria-hidden="true">#</a></h2><p><code>v-</code> 접두사가 있는 특수한 속성을 디렉티브라 합입니다. Vue는 위에서 소개한 <code>v-html</code>과 <code>v-bind</code>를 포함하여 <a href="/api/built-in-directives.html">빌트인 디렉티브</a>를 제공합니다.</p><p>디렉티브 속성 값은 단일 JavaScript 표현식이어야 합니다(나중에 해당 섹션에서 설명할 <code>v-for</code>, <code>v-on</code> 및 <code>v-slot</code> 제외). 디렉티브의 역할은 표현식 값이 변경될 때 DOM에 반응적으로 업데이트를 적용하는 것입니다. <a href="/api/built-in-directives.html#v-if"><code>v-if</code></a>를 예로 들어 보겠습니다.</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">seen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">이제 이것을 볼 수 있습니다.</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>v-if</code> 디렉티브는 <code>seen</code>의 불리언(truthy/falsy) 값을 기반으로 <code>&lt;p&gt;</code> 엘리먼트를 삽입 또는 제거합니다.</p><h3 id="arguments" tabindex="-1">인자 <a class="header-anchor" href="#arguments" aria-hidden="true">#</a></h3><p>일부 디렉티브는 디렉티브 뒤에 콜론(<code>:</code>)으로 표시되는 &quot;인자&quot;를 사용할 수 있습니다. 예를 들어 <code>v-bind</code> 디렉티브는 HTML 속성을 반응적으로 업데이트하는 데 사용됩니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 단축 문법 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>href</code>는 <code>v-bind</code> 디렉티브의 인자로서, 엘리먼트의 속성인 <code>href</code>에 <code>url</code>의 값을 바인딩한 것입니다. 간단하게 인자 앞의 <code>v-bind:</code>는 <code>:</code>로 줄여 쓸 수 있습니다.</p><p>또 다른 예로는 DOM 이벤트를 수신하는 <code>v-on</code> 디렉티브입니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-on</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 단축 문법 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>click</code>의 인자는 수신할 이벤트 이름입니다. <code>v-on</code>은 단축형으로 <code>@</code>를 대신 사용할 수 있습니다. 이벤트 처리에 대해서는 나중에 더 자세히 설명하겠습니다.</p><h3 id="dynamic-arguments" tabindex="-1">동적인 인자 <a class="header-anchor" href="#dynamic-arguments" aria-hidden="true">#</a></h3><p>디렉티브의 인자를 대괄호로 감싸서 JavaScript 표현식으로 사용할 수도 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">아래의 &quot;동적인 인자 값 제약 조건&quot; 및 &quot;동적인 인자 문법 제약 조건&quot; 섹션에 설명된 대로,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">인자 표현식에는 몇 가지 제약 사항이 있음에 유의하십시오.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">--&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind:</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attributeName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 단축 문법 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#C792EA;">attributeName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>attributeName</code>은 JavaScript 표현식으로 동적으로 평가되며, 평가된 값은 인자의 최종값으로 사용됩니다. 예를 들어 컴포넌트 인스턴스의 데이터에 <code>attributeName</code> 속성값이 <code>&quot;href&quot;</code>인 경우, 이 바인딩은 <code>v-bind:href</code>와 같습니다.</p><p>마찬가지로 동적인 인자를 사용하여, 핸들러에 이벤트 이름을 동적으로 바인딩할 수 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-on:</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">eventName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 단축 문법 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> @[</span><span style="color:#C792EA;">eventName</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">doSomething</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>이 예에서 <code>eventName</code>의 값이 <code>&quot;focus&quot;</code>인 경우, <code>v-on:[eventName]</code>은 <code>v-on:focus</code>와 같습니다.</p><h4 id="dynamic-argument-value-constraints" tabindex="-1">동적인 인자 값 제약 조건 <a class="header-anchor" href="#dynamic-argument-value-constraints" aria-hidden="true">#</a></h4><p>동적인 인자는 <code>null</code> 또는 문자열로 평가되어야 합니다. 값이 <code>null</code>일 경우, 바인딩을 명시적으로 제거합니다. 문자열이 아닌 다른 값은 에러를 트리거합니다.</p><h4 id="dynamic-argument-syntax-constraints" tabindex="-1">동적인 인자 문법 제약 조건 <a class="header-anchor" href="#dynamic-argument-syntax-constraints" aria-hidden="true">#</a></h4><p>동적인 인자 표현식에는 공백 및 따옴표와 같은 특정 문자가 HTML 속성 이름 내에서 유효하지 않기 때문에 문법에 일부 제약 조건이 있습니다. 예를 들어 다음은 유효하지 않습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 이렇게 하면 컴파일러 경고가 트리거됩니다. --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> + </span><span style="color:#C792EA;">bar</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>복잡한 동적인 인자를 전달해야 하는 경우 <a href="./computed.html">computed 속성</a>을 사용하는 것이 더 나을 것입니다. 이에 대해서는 곧 다룰 것입니다.</p><p>DOM 내 템플릿(HTML 파일에 직접 작성된 템플릿)을 사용할 때, 브라우저가 속성 이름을 소문자로 강제 변환하므로 대문자로 키 이름을 지정하는 것도 피해야 합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> :[</span><span style="color:#C792EA;">someAttr</span><span style="color:#89DDFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>위의 내용은 DOM 내 템플릿에서 <code>:[someattr]</code>로 변환됩니다. 컴포넌트에 <code>someattr</code> 대신 <code>someAttr</code> 속성을 사용했다면 코드가 작동하지 않습니다. 싱글 파일 컴포넌트 내의 템플릿은 이 제약 조건에 해당하지 않습니다.</p><h3 id="modifiers" tabindex="-1">수식어 <a class="header-anchor" href="#modifiers" aria-hidden="true">#</a></h3><p>수식어는 점(<code>.</code>)으로 시작하는 특수한 접미사로, 디렉티브가 특별한 방식으로 바인딩되어야 함을 나타냅니다. 예를 들어 <code>.prevent</code> 수식어는 트리거된 이벤트에서 <code>event.preventDefault()</code>를 호출하도록 <code>v-on</code> 디렉티브에 지시합니다.</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">submit</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">onSubmit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>추후 이러한 기능에 대해 찾아볼 때, <a href="./event-handling.html#event-modifiers"><code>v-on</code></a> 또는 <a href="./forms.html#modifiers"><code>v-model</code></a> 전용의 다른 수식어에 대한 예제를 접할 수 있습니다.</p><p>마지막으로 다음은 전체적인 디렉티브 문법을 시각화한 것입니다:</p><p><img src="/assets/directive.725d2cb6.png" alt="디렉티브 문법 그래프"></p>',74),c=JSON.parse('{"title":"템플릿 문법","description":"","frontmatter":{},"headers":[{"level":2,"title":"텍스트 보간법","slug":"text-interpolation","link":"#text-interpolation","children":[]},{"level":2,"title":"HTML 출력","slug":"raw-html","link":"#raw-html","children":[]},{"level":2,"title":"속성 바인딩","slug":"attribute-bindings","link":"#attribute-bindings","children":[{"level":3,"title":"단축 문법","slug":"shorthand","link":"#shorthand","children":[]},{"level":3,"title":"불리언(Boolean) 속성","slug":"boolean-attributes","link":"#boolean-attributes","children":[]},{"level":3,"title":"여러 속성을 동적으로 바인딩","slug":"dynamically-binding-multiple-attributes","link":"#dynamically-binding-multiple-attributes","children":[]}]},{"level":2,"title":"JavaScript 표현식 사용","slug":"using-javascript-expressions","link":"#using-javascript-expressions","children":[{"level":3,"title":"하나의 표현식만 가능","slug":"expressions-only","link":"#expressions-only","children":[]},{"level":3,"title":"함수 호출","slug":"calling-functions","link":"#calling-functions","children":[]},{"level":3,"title":"제한된 전역 접근","slug":"restricted-globals-access","link":"#restricted-globals-access","children":[]}]},{"level":2,"title":"디렉티브","slug":"directives","link":"#directives","children":[{"level":3,"title":"인자","slug":"arguments","link":"#arguments","children":[]},{"level":3,"title":"동적인 인자","slug":"dynamic-arguments","link":"#dynamic-arguments","children":[]},{"level":3,"title":"수식어","slug":"modifiers","link":"#modifiers","children":[]}]}],"relativePath":"guide/essentials/template-syntax.md"}'),r=Object.assign({name:"guide/essentials/template-syntax.md"},{setup(o){const c='<span style="color: red">이것은 빨간색이어야 합니다.</span>';return(o,r)=>(s(),a("div",null,[p,n("div",{class:"demo"},[n("p",null,"텍스트 보간법 사용: "+l(c)),n("p",null,[e("v-html 디렉티브 사용: "),n("span",{innerHTML:c})])]),t]))}});export{c as __pageData,r as default};

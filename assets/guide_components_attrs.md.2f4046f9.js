import{_ as s,o as a,c as n,a as l}from"./app.64b8c0f0.js";const t=JSON.parse('{"title":"폴스루 속성","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"속성 상속","slug":"attribute-inheritance","link":"#attribute-inheritance","children":[{"level":3,"title":"class와 style의 병합","slug":"class-and-style-merging","link":"#class-and-style-merging","children":[]},{"level":3,"title":"v-on 리스너 상속","slug":"v-on-listener-inheritance","link":"#v-on-listener-inheritance","children":[]},{"level":3,"title":"중첩된 컴포넌트 상속","slug":"nested-component-inheritance","link":"#nested-component-inheritance","children":[]}]},{"level":2,"title":"속성 상속 비활성화","slug":"disabling-attribute-inheritance","link":"#disabling-attribute-inheritance","children":[]},{"level":2,"title":"다중 루트 노드에서 속성 상속","slug":"attribute-inheritance-on-multiple-root-nodes","link":"#attribute-inheritance-on-multiple-root-nodes","children":[]},{"level":2,"title":"JavaScript에서 폴스루 속성 접근하기","slug":"accessing-fallthrough-attributes-in-javascript","link":"#accessing-fallthrough-attributes-in-javascript","children":[]}],"relativePath":"guide/components/attrs.md"}'),o={name:"guide/components/attrs.md"},e=[l('<h1 id="fallthrough-attributes" tabindex="-1">폴스루 속성 <a class="header-anchor" href="#fallthrough-attributes" aria-hidden="true">#</a></h1><blockquote><p>이 페이지에서는 <a href="/guide/essentials/component-basics.html">컴포넌트 기초</a>를 이미 읽었다고 가정합니다. 컴포넌트를 처음 사용하는 경우, 그 문서를 먼저 읽으십시오.</p></blockquote><h2 id="attribute-inheritance" tabindex="-1">속성 상속 <a class="header-anchor" href="#attribute-inheritance" aria-hidden="true">#</a></h2><p>&quot;폴스루(fallthrough: 대체) 속성&quot;은 컴포넌트에 전달되는 속성 또는 <code>v-on</code> 이벤트 리스너 이지만, 이것을 받는 컴포넌트의 <a href="./props.html">props</a> 또는 <a href="./events.html#declaring-emitted-events">emits</a>에서 명시적으로 선언되지 않은 속성입니다. 일반적인 예로는 <code>class</code>, <code>style</code>, <code>id</code> 속성이 있습니다.</p><p>컴포넌트가 싱글 루트 엘리먼트를 렌더링하면 폴스루 속성이 루트 엘리먼트의 속성에 자동으로 추가됩니다. 예를 들어 <code>&lt;MyButton&gt;</code> 템플릿이 있는 컴포넌트가 있다고 가정합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- &lt;MyButton&gt;의 템플릿 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>그리고 이 컴포넌트를 다음과 같이 사용하는 부모:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">large</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre></div><p>최종 렌더링된 DOM은 다음과 같습니다:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">large</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>&lt;MyButton&gt;</code>은 <code>class</code>를 허용되는 프로퍼티로 선언하지 않았습니다. 따라서 <code>class</code>는 폴스루 어트리뷰트로 처리되어 <code>&lt;MyButton&gt;</code>의 루트 엘리먼트에 자동으로 추가됩니다.</p><h3 id="class-and-style-merging" tabindex="-1"><code>class</code>와 <code>style</code>의 병합 <a class="header-anchor" href="#class-and-style-merging" aria-hidden="true">#</a></h3><p>자식 컴포넌트의 루트 엘리먼트에 이미 <code>class</code> 또는 <code>style</code> 속성이 있는 경우, 상위 엘리먼트에서 상속된 <code>class</code> 또는 <code>style</code> 값과 병합됩니다. 이전 예에서 <code>&lt;MyButton&gt;</code>의 템플릿을 다음과 같이 변경한다면:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- &lt;MyButton&gt;의 템플릿 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>그러면 최종 렌더링된 DOM은 다음과 같습니다:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn large</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h3 id="v-on-listener-inheritance" tabindex="-1"><code>v-on</code> 리스너 상속 <a class="header-anchor" href="#v-on-listener-inheritance" aria-hidden="true">#</a></h3><p><code>v-on</code> 이벤트 리스너에도 동일한 규칙이 적용됩니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyButton</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">onClick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>click</code> 리스너는 <code>&lt;MyButton&gt;</code>의 루트 엘리먼트인 <code>&lt;button&gt;</code> 엘리먼트에 추가됩니다. <code>&lt;button&gt;</code>을 클릭하면 부모 컴포넌트의 <code>onClick</code> 메서드가 트리거됩니다. <code>&lt;button&gt;</code>에 이미 <code>v-on</code>으로 바인딩된 <code>click</code> 리스너가 있는 경우 두 리스너가 모두 트리거됩니다.</p><h3 id="nested-component-inheritance" tabindex="-1">중첩된 컴포넌트 상속 <a class="header-anchor" href="#nested-component-inheritance" aria-hidden="true">#</a></h3><p>컴포넌트가 다른 컴포넌트를 루트 노드로 렌더링하는 경우, 예를 들어 <code>&lt;MyButton&gt;</code>을 리팩터링하여 <code>&lt;BaseButton&gt;</code>을 루트로 렌더링합니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 다른 컴포넌트 하나를 렌더링하는 &lt;MyButton/&gt; 템플릿 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BaseButton</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre></div><p>그러면 <code>&lt;MyButton&gt;</code>이 수신한 폴스루 속성이 자동으로 <code>&lt;BaseButton&gt;</code>으로 전달됩니다.</p><p>참고:</p><ol><li><p>전달되는 속성이 <code>&lt;MyButton&gt;</code>에서 <code>props</code>로 선언되었거나 <code>emit</code>으로 등록된 핸들러일 경우, <code>&lt;BaseButton&gt;</code>으로 전달되지 않습니다. <code>&lt;MyButton&gt;</code> 에서 명시적으로 선언되어 &quot;사로잡혔기(consumed)&quot; 때문입니다.</p></li><li><p>그러나 전달되는 속성이 <code>&lt;MyButton&gt;</code>의 템플릿에서 다시 선언된 경우, <code>props</code>나 핸들러로 허용될 수 있습니다.</p></li></ol><h2 id="disabling-attribute-inheritance" tabindex="-1">속성 상속 비활성화 <a class="header-anchor" href="#disabling-attribute-inheritance" aria-hidden="true">#</a></h2><p>컴포넌트가 속성을 <strong>자동으로 상속하지 않도록</strong>하려면, 컴포넌트 옵션 중 <code>inheritAttrs: false</code>를 설정합니다.</p><div class="composition-api"><p><code>&lt;script setup&gt;</code>을 사용하는 경우, 별도의 일반 <code>&lt;script&gt;</code> 블록을 사용하여 이 옵션을 선언해야 합니다:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 일반 &lt;script&gt;를 사용하여 옵션 선언</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inheritAttrs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// ...setup 로직</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></div><p>속성 상속을 비활성화하는 일반적인 시나리오는 루트 노드 이외의 다른 엘리먼트에 속성을 적용해야 하는 경우입니다. <code>inheritAttrs</code> 옵션을 <code>false</code>로 설정하면 폴스루 속성을 적용해야 하는 위치를 완전히 제어할 수 있습니다.</p><p>이러한 폴스루 속성은 템플릿 표현식에서 <code>$attrs</code>로 직접 접근할 수 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">폴스루 속성: </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> $attrs </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>$attrs</code> 객체에는 컴포넌트의 <code>props</code> 또는 <code>emits</code> 옵션으로 선언되지 않은 모든 속성(예: <code>class</code>, <code>style</code>, <code>v-on</code> 리스너 등)이 포함됩니다.</p><p>참고:</p><ul><li><p>props와 달리 폴스루 속성은 JavaScript에서 원 표기를 유지하므로 <code>foo-bar</code>와 같은 속성은 <code>$attrs[&#39;foo-bar&#39;]</code>로 접근해야 합니다.</p></li><li><p><code>@click</code>과 같은 <code>v-on</code> 이벤트 리스너는 <code>$attrs.onClick</code> 속성에 노출 됩니다.</p></li></ul><p><a href="#attribute-inheritance">이전 섹션</a>의 <code>&lt;MyButton&gt;</code> 컴포넌트 예제 사용 - 때로는 스타일 지정을 위해 실제 <code>&lt;button&gt;</code> 엘리먼트를 <code>&lt;div&gt;</code>로 추가 래핑해야 할 수도 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn-wrapper</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>class</code> 및 <code>v-on</code> 리스너와 같은 폴스루 속성이 외부 <code>&lt;div&gt;</code>가 아닌 내부 <code>&lt;button&gt;</code>에 적용되기를 원할 수 있습니다. <code>inheritAttrs: false</code>로 설정하고, <code>v-bind=&quot;$attrs&quot;</code>로 이를 구현할 수 있습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn-wrapper</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$attrs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">클릭하기</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><a href="/guide/essentials/template-syntax.html#dynamically-binding-multiple-attributes">인자없는 <code>v-bind</code></a>는 객체의 모든 속성을 대상 엘리먼트의 속성으로 묶는다는 것을 기억하세요.</p><h2 id="attribute-inheritance-on-multiple-root-nodes" tabindex="-1">다중 루트 노드에서 속성 상속 <a class="header-anchor" href="#attribute-inheritance-on-multiple-root-nodes" aria-hidden="true">#</a></h2><p>단일 루트 노드가 있는 컴포넌트와 달리 여러 루트 노드가 있는 컴포넌트에는 자동 속성 폴스루 동작이 없습니다. <code>$attrs</code>가 명시적으로 바인딩되지 않은 경우 런타임 경고가 발행됩니다.</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">CustomLayout</span><span style="color:#89DDFF;"> </span><span style="color:#F78C6C;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">custom-layout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">changeValue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>&lt;CustomLayout&gt;</code>에 다음과 같은 다중 루트 템플릿이 있는 경우, Vue가 폴스루 속성을 적용할 위치를 확신할 수 없기 때문에 경고가 표시됩니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>$attrs</code>가 명시적으로 바인딩된 경우, 경고가 표시되지 않습니다:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line highlighted"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-bind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$attrs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h2 id="accessing-fallthrough-attributes-in-javascript" tabindex="-1">JavaScript에서 폴스루 속성 접근하기 <a class="header-anchor" href="#accessing-fallthrough-attributes-in-javascript" aria-hidden="true">#</a></h2><div class="composition-api"><p>If needed, you can access a component&#39;s fallthrough attributes in <code>&lt;script setup&gt;</code> using the <code>useAttrs()</code> API: 필요한 경우 <code>useAttrs()</code> API를 사용하여 <code>&lt;script setup&gt;</code>에서 컴포넌트의 폴스루 속성에 접근할 수 있습니다:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useAttrs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> attrs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useAttrs</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p><code>&lt;script setup&gt;</code>을 사용하지 않으면 <code>attrs</code>가 <code>setup()</code> 컨텍스트의 속성으로 노출됩니다:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">setup</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 폴스루 속성은 ctx.attrs로 노출됩니다.</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">attrs</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>여기서 <code>attrs</code> 객체는 항상 최신 폴스루 속성을 반영하지만 (성능상의 이유로) 반응하지 않습니다. 감시자를 사용하여 변경 사항을 관찰할 수 없습니다. 반응성이 필요하다면 prop를 사용하세요. 또는 <code>onUpdated()</code>를 사용하여 업데이트할 때마다 최신 <code>attrs</code>로 부작용을 수행할 수 있습니다.</p></div><div class="options-api"><p>필요한 경우 <code>$attrs</code> 인스턴스 속성을 통해 컴포넌트의 폴스루 속성에 접근할 수 있습니다:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">created</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$attrs</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></div>',50)];const p=s(o,[["render",function(s,l,t,o,p,c){return a(),n("div",null,e)}]]);export{t as __pageData,p as default};

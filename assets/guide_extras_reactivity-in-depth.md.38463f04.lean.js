import{N as s,_ as n,r as a,o as l,c as p,u as o,t as e,d as c,F as t,n as r,j as y,A as F,B as D,e as A,a as C}from"./app.ea8bebef.js";const i=s(Array.from(Array(3).keys()).map((s=>Array.from(Array(3).keys()).map((s=>"")))));function d(s){if(!s.startsWith("="))return s;s=s.slice(1).replace(/\b([A-Z])(\d{1,2})\b/g,((s,n,a)=>`get(${n.charCodeAt(0)-65},${a})`));try{return new Function("get",`return ${s}`)(u)}catch(n){return`#ERROR ${n}`}}function u(s,n){const a=d(i[s][n]),l=Number(a);return Number.isFinite(l)?l:a}i[0][0]="1",i[0][1]="2",i[0][2]="= A0 + A1";const g=["title"],b=["value"],h={key:1};var f=n({__name:"SpreadSheetCell",props:{c:Number,r:Number},setup(s){const n=s,c=a(!1);function t(s){c.value=!1,i[n.c][n.r]=s.target.value.trim()}return(n,a)=>(l(),p("div",{class:"cell",title:o(i)[s.c][s.r],onClick:a[1]||(a[1]=s=>c.value=!0)},[c.value?(l(),p("input",{key:0,value:o(i)[s.c][s.r],onChange:t,onBlur:t,onVnodeMounted:a[0]||(a[0]=({el:s})=>s.focus())},null,40,b)):(l(),p("span",h,e(o(d)(o(i)[s.c][s.r])),1))],8,g))}},[["__scopeId","data-v-f36dc108"]]);const v=(s=>(F("data-v-bc75b9c0"),s=s(),D(),s))((()=>c("th",null,null,-1)));var I=n({__name:"SpreadSheet",setup(s){const n=i.map(((s,n)=>String.fromCharCode(65+n)));return(s,a)=>(l(),p("table",null,[c("thead",null,[c("tr",null,[v,(l(!0),p(t,null,r(o(n),(s=>(l(),p("th",null,e(s),1)))),256))])]),c("tbody",null,[(l(!0),p(t,null,r(o(i)[0].length,(s=>(l(),p("tr",null,[c("th",null,e(s-1),1),(l(!0),p(t,null,r(o(n),((n,a)=>(l(),p("td",null,[y(f,{r:s-1,c:a},null,8,["r","c"])])))),256))])))),256))])]))}},[["__scopeId","data-v-bc75b9c0"]]);const m=c("h1",{id:"반응형-심화",tabindex:"-1"},[A("반응형 심화 "),c("a",{class:"header-anchor",href:"#반응형-심화","aria-hidden":"true"},"#")],-1),Z=c("p",null,"Vue의 가장 뚜렷한 기능 중 하나는 눈에 거슬리지 않는 반응형 시스템입니다. 컴포넌트의 상태는 반응형 JavaScript 객체입니다. 수정하면 view가 업데이트됩니다. 상태 관리를 간단하고 직관적으로 만들지만 몇 가지 일반적인 문제를 피하기 위해 작동 방식을 이해하는 것도 중요합니다. 이 섹션에서는 Vue의 반응형 시스템의 저수준 세부 정보를 파헤칠 것입니다.",-1),V=c("h2",{id:"반응형이란",tabindex:"-1"},[A("반응형이란? "),c("a",{class:"header-anchor",href:"#반응형이란","aria-hidden":"true"},"#")],-1),G=c("p",null,"요즘 프로그래밍에서 꽤 많이 등장하는 이 용어는 무엇을 의미할까요? 반응형은 선언적 방식으로 변화에 적응할 수 있게 해주는 프로그래밍 패러다임입니다. 일반적으로 보여주는 표준 예는 Excel 스프레드시트입니다:",-1),E=C("",79),B='{"title":"반응형 심화","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"반응형이란?","slug":"반응형이란"},{"level":2,"title":"Vue에서 반응형 작동 방식","slug":"vue에서-반응형-작동-방식"},{"level":2,"title":"런타임 (실행 시) vs. 컴파일 타임 (컴파일 시) 반응형","slug":"런타임-실행-시-vs-컴파일-타임-컴파일-시-반응형"},{"level":2,"title":"반응형 디버깅","slug":"반응형-디버깅"},{"level":3,"title":"컴포넌트 디버깅 훅","slug":"컴포넌트-디버깅-훅"},{"level":3,"title":"계산된 속성 디버깅","slug":"계산된-속성-디버깅"},{"level":3,"title":"감시자 디버깅","slug":"감시자-디버깅"},{"level":2,"title":"외부 상태 시스템과의 통합","slug":"외부-상태-시스템과의-통합"},{"level":3,"title":"불변 데이터","slug":"불변-데이터"},{"level":3,"title":"상태 머신 (State Machine)","slug":"상태-머신-state-machine"},{"level":3,"title":"RxJS","slug":"rxjs"}],"relativePath":"guide/extras/reactivity-in-depth.md"}',S=Object.assign({},{__name:"reactivity-in-depth",setup:s=>(s,n)=>(l(),p("div",null,[m,Z,V,G,y(I),E]))});export{B as __pageData,S as default};
